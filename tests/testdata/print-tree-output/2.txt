source
  sourceItem
    funcDef
      def
      funcSignature
        f  [line 1, offset: 4]
        (
        arg
          first  [line 1, offset: 6]
          of
          typeRef
            built
              int
        ,
        arg
          arr  [line 1, offset: 20]
          of
          typeRef
            typeRef
              File  [line 1, offset: 27]
            array
            [
            5  [line 1, offset: 39]
            ]
        )
        of
        typeRef
          built
            string
      statement
        ifExpr
          if
          expr
            expr
              a  [line 2, offset: 7]
            <  [line 2, offset: 9]
            expr
              3  [line 2, offset: 11]
        ifThen
          then
          statement
            {
            blockBody
              statement
                expr
                  expr
                    expr
                      expr
                        expr
                          expr
                            expr
                              a  [line 3, offset: 8]
                            +=  [line 3, offset: 10]
                            expr
                              3  [line 3, offset: 13]
                          *  [line 3, offset: 15]
                          expr
                            arr  [line 3, offset: 17]
                        [
                        ranges
                          expr
                            0  [line 3, offset: 21]
                          ..
                          expr
                            2  [line 3, offset: 24]
                        ,
                        ranges
                          expr
                            4  [line 3, offset: 27]
                        ]
                      +  [line 3, offset: 30]
                      expr
                        ~  [line 3, offset: 32]
                        expr
                          default  [line 3, offset: 33]
                    (
                    )
                  &  [line 3, offset: 43]
                  expr
                    0x0F  [line 3, offset: 45]
                ;
            }
        ifElse
          else
          statement
            {
            blockBody
              statement
                whileExpr
                  while
                  expr
                    expr
                      a  [line 5, offset: 14]
                    >  [line 5, offset: 16]
                    expr
                      0  [line 5, offset: 18]
                whileBody
                  statement
                    {
                    blockBody
                      statement
                        expr
                          expr
                            expr
                              expr
                                a  [line 6, offset: 12]
                              =  [line 6, offset: 14]
                              expr
                                a  [line 6, offset: 16]
                            -  [line 6, offset: 18]
                            expr
                              !  [line 6, offset: 20]
                              expr
                                b  [line 6, offset: 22]
                          (
                          )
                        ;
                      statement
                        ifExpr
                          if
                          expr
                            expr
                              q  [line 7, offset: 15]
                            ==  [line 7, offset: 17]
                            expr
                              3  [line 7, offset: 20]
                        ifThen
                          then
                          statement
                            break
                            ;
                        end
                    }
                end
            }
        end
      statement
        untilStatement
          do
          statement
            expr
              expr
                a  [line 10, offset: 7]
              +=  [line 10, offset: 9]
              expr
                1  [line 10, offset: 12]
            ;
        untilExpr
          until
          expr
            expr
              a  [line 10, offset: 21]
            <  [line 10, offset: 23]
            expr
              10  [line 10, offset: 25]
        ;
      statement
        untilStatement
          do
          statement
            {
            blockBody
              statement
                expr
                  expr
                    a  [line 12, offset: 8]
                  +=  [line 12, offset: 10]
                  expr
                    5  [line 12, offset: 13]
                ;
              statement
                ifExpr
                  if
                  expr
                    expr
                      a  [line 13, offset: 11]
                    >  [line 13, offset: 13]
                    expr
                      100  [line 13, offset: 15]
                ifThen
                  then
                  statement
                    break
                    ;
                end
              statement
                expr
                  expr
                    a  [line 14, offset: 8]
                  ^=  [line 14, offset: 10]
                  expr
                    xor  [line 14, offset: 13]
                ;
            }
        untilExpr
          until
          expr
            expr
              expr
                call  [line 15, offset: 12]
              (
              )
            ==  [line 15, offset: 19]
            expr
              0  [line 15, offset: 22]
        ;
      end
  <EOF>
