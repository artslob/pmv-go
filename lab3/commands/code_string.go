// Code generated by "stringer -type Code"; DO NOT EDIT.

package commands

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nop-0]
	_ = x[Halt-1]
	_ = x[NegByte-2]
	_ = x[NegInt-3]
	_ = x[NegLong-4]
	_ = x[Not-5]
	_ = x[Mul-6]
	_ = x[Div-7]
	_ = x[Mod-8]
	_ = x[AddByte-9]
	_ = x[AddInt-10]
	_ = x[AddLong-11]
	_ = x[SubByte-12]
	_ = x[SubInt-13]
	_ = x[SubLong-14]
	_ = x[IfEqZero-15]
	_ = x[IfNotEqZero-16]
	_ = x[IfLessZero-17]
	_ = x[IfLessEqZero-18]
	_ = x[IfGtZero-19]
	_ = x[IfGtEqZero-20]
	_ = x[IfEq-21]
	_ = x[IfNotEq-22]
	_ = x[IfLess-23]
	_ = x[IfLessEq-24]
	_ = x[IfGt-25]
	_ = x[IfGtEq-26]
	_ = x[And-27]
	_ = x[Or-28]
	_ = x[Xor-29]
	_ = x[PushByte-30]
	_ = x[PushInt-31]
	_ = x[PushLong-32]
	_ = x[PushReference-33]
	_ = x[StoreByte-34]
	_ = x[StoreInt-35]
	_ = x[StoreLong-36]
	_ = x[StoreReference-37]
	_ = x[FetchByte-38]
	_ = x[FetchInt-39]
	_ = x[FetchLong-40]
	_ = x[FetchReference-41]
}

const _Code_name = "NopHaltNegByteNegIntNegLongNotMulDivModAddByteAddIntAddLongSubByteSubIntSubLongIfEqZeroIfNotEqZeroIfLessZeroIfLessEqZeroIfGtZeroIfGtEqZeroIfEqIfNotEqIfLessIfLessEqIfGtIfGtEqAndOrXorPushBytePushIntPushLongPushReferenceStoreByteStoreIntStoreLongStoreReferenceFetchByteFetchIntFetchLongFetchReference"

var _Code_index = [...]uint16{0, 3, 7, 14, 20, 27, 30, 33, 36, 39, 46, 52, 59, 66, 72, 79, 87, 98, 108, 120, 128, 138, 142, 149, 155, 163, 167, 173, 176, 178, 181, 189, 196, 204, 217, 226, 234, 243, 257, 266, 274, 283, 297}

func (i Code) String() string {
	if i >= Code(len(_Code_index)-1) {
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Code_name[_Code_index[i]:_Code_index[i+1]]
}
